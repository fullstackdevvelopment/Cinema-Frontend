const customStyles = {
  control: (provided) => ({
    ...provided,
    background: 'rgba(255, 255, 255, 0.7)',
    borderRadius: '20px',
    border: '2px solid #135f55',
    padding: '5px 19px',
    color: '#135f55',
    fontSize: '16px',
    width: '100%',
    fontWeight: '600',
    lineHeight: '21.09px',
    outline: 'none',
    boxShadow: 'none',
    '&:focus': {
      ...provided[':focus'],
      color: '#fff',
      border: 'none',
      outline: 'none',
      boxShadow: 'none',
    },
    '&:hover': {
      ...provided[':hover'],
      outline: 'none',
      boxShadow: 'none',
    },
    '&:focus-visible': {
      ...provided[':focus-visible'],
      outline: 'none',
      boxShadow: 'none',
    },
  }),
  option: (provided) => ({
    ...provided,
    background: '#135f55',
    color: '#fff',
    border: 'none',
    outline: 'none',
    boxShadow: 'none',
    borderRadius: '15px',
    fontSize: '16px',
    fontWeight: '600',
    lineHeight: '21.09px',
    width: '100%',
    ':hover': {
      background: 'rgba(255, 255, 255, 0.7)',
      color: '#135f55',
      border: 'none',
      outline: 'none',
      boxShadow: 'none',
    },
  }),
  singleValue: (provided) => ({
    ...provided,
    color: '#135f55',
    border: 'none',
    outline: 'none',
    boxShadow: 'none',
  }),
  placeholder: (provided) => ({
    ...provided,
    color: '#135f55',
    margin: '0',
    fontSize: '16px',
    fontWeight: '600',
    lineHeight: '21.09px',
    border: 'none',
    outline: 'none',
    boxShadow: 'none',
  }),
  indicatorSeparator: (provided) => ({
    ...provided,
    width: '0',
    border: 'none',
    outline: 'none',
    boxShadow: 'none',
  }),
  dropdownIndicator: (provided) => ({
    ...provided,
    color: '#135f55 !important',
    border: 'none',
    outline: 'none',
    boxShadow: 'none',
  }),
  menu: (provided, state) => ({
    ...provided,
    backgroundColor: state.isFocused ? 'rgba(255, 255, 255, 0.7)' : 'rgba(19, 95, 85, 1)',
    borderRadius: '15px',
    boxShadow: '0px 0px 28px 5px rgba(19, 95, 85, 0.85)',
    border: 'none',
    outline: 'none',
    display: 'flex',
    width: '100%',
    flexDirection: 'column',
    justifyContent: 'space-between',
    padding: '0',
    margin: '2px',
  }),
  menuList: (base) => ({
    ...base,
    '::-webkit-scrollbar': {
      width: '20px',
      height: '0px',
    },
    '::-webkit-scrollbar-track': {
      background: '#135f55',
      borderTopRightRadius: '15px',
      borderBottomRightRadius: '15px',
    },
    '::-webkit-scrollbar-thumb': {
      background: '#fff',
      borderRadius: '20px',
      transition: 'all 0.3s',
    },
    '::-webkit-scrollbar-thumb:hover': {
      background: '#0c8575',
    },
  }),
  clearIndicator: (provided) => ({
    ...provided,
    color: '#062822 !important',
    border: 'none',
    outline: 'none',
    boxShadow: 'none',
    padding: '0',
  }),
  valueContainer: (provided) => ({
    ...provided,
    padding: '0',
  }),
  input: (provided) => ({
    ...provided,
    color: '#062822 !important',
  }),
  multiValue: (provided) => ({
    ...provided,
    background: '#135f55 !important',
    borderRadius: '15px',
    color: '#fff',
  }),
  multiValueLabel: (provided) => ({
    ...provided,
    color: '#fff !important',
  }),
  multiValueRemove: (provided) => ({
    ...provided,
    color: '#fff !important',
    transition: 'all 0.3s',
    borderTopRightRadius: '15px',
    borderBottomRightRadius: '15px',
    cursor: 'pointer',
    '&:hover': {
      ...provided[':hover'],
      outline: 'none',
      boxShadow: 'none',
      backgroundColor: '#1c796d !important',
    },
  }),
};

export default customStyles;
